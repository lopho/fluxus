###############################################################
# SConscript for fluxus-openal
#
# This is the main RACKET module for the fluxus openal functions

Import("env", "BinaryModulesLocation", "MZDYN", "static_modules", "racket_framework")

if env['PLATFORM'] == 'darwin':
	Target = "fluxus-openal_ss.dylib"
elif env['PLATFORM'] == 'win32':
	Target = "fluxus-openal_ss.dll"
else:
	Target = "fluxus-openal_ss.so"

static_modules = False
if static_modules: Target = "fluxus-openal_ss"

Install = BinaryModulesLocation

Frameworks = []
Libs = []
if env['PLATFORM'] == 'darwin': Frameworks += ['OpenAL']
elif env['PLATFORM'] == 'win32': Libs += ['libmzsch3m_6ncc9s', 'openal32']
else: Libs += ['openal']

Source = Split("src/FluxAudio.cpp \
		src/OpenALFunctions.cpp") + \
		[MZDYN]

if env['PLATFORM'] == 'darwin':
	if racket_framework:
		Frameworks += ['Racket']
	else:
		Libs += ['racket3m']

if static_modules:
	env.StaticLibrary(source = Source,
				  target = Target,
				  LIBS = Libs,
				  FRAMEWORKS = Frameworks)
else:
	env.SharedLibrary(source = Source,
				  target = Target,
				  LIBS = Libs,
				  SHLIBPREFIX = "",
				  FRAMEWORKS = Frameworks)

if not static_modules: env.Install(Install, Target)
